{"version":3,"sources":["webpack:///src/app/pages/login-email/login-email.page.html","webpack:///src/app/pages/login-email/login-email-routing.module.ts","webpack:///src/app/pages/login-email/login-email.module.ts","webpack:///src/app/pages/login-email/login-email.page.scss","webpack:///src/app/pages/login-email/login-email.page.ts"],"names":["routes","path","component","LoginEmailPageRoutingModule","imports","forChild","exports","LoginEmailPageModule","declarations","LoginEmailPage","angularFire","router","ngZone","authService","validation_messages","type","message","loginForm","compose","required","pattern","minLength","authRedirectResult","getRedirectResult","subscribe","result","user","redirectLoggedUserToHomePage","error","submitError","signInWithEmail","value","then","run","navigate","selector","template"],"mappings":"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","file":"pages-login-email-login-email-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"sign-in-content\\\">\\n  <section class=\\\"form-login-email\\\">\\n    <div class=\\\"logo-login-email ion-text-center\\\">\\n      <img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"bloc-form-login-email\\\">\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"signInWithEmail()\\\">\\n        <ion-list class=\\\"inputs-list input-list-login-email\\\" lines=\\\"full\\\">\\n          <ion-item class=\\\"input-item input-login-email\\\">\\n            <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" clearInput autocapitalize=\\\"off\\\" inputmode=\\\"email\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"error-container\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span>{{ validation.message }}</span>\\n              </div>\\n            </ng-container>\\n          </div>\\n          <ion-item class=\\\"input-item input-login-email\\\">\\n            <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"error-container\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span>{{ validation.message }}</span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-list>\\n        <ion-button class=\\\"sign-in-btn btn-login-email\\\" type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!loginForm.valid\\\">Go !</ion-button>\\n        <div class=\\\"error-container\\\" *ngIf=\\\"submitError\\\">\\n          <div class=\\\"error-message\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n            <span>{{ submitError }}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"forgot-password ion-text-center\\\">\\n          <ion-button routerLink=\\\"/login/lost-password\\\">\\n            mot de passe oubli√©\\n          </ion-button>\\n        </div>\\n      </form>\\n    </div>\\n  </section>\\n  <section class=\\\"remove-form ion-text-center\\\">\\n    <div class=\\\"bloc-remove-form\\\">\\n      <ion-button>\\n        Annuler\\n      </ion-button>\\n    </div>\\n  </section>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginEmailPage } from './login-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginEmailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginEmailPageRoutingModule } from './login-email-routing.module';\n\nimport { LoginEmailPage } from './login-email.page';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginEmailPageRoutingModule,\n  ],\n  declarations: [LoginEmailPage]\n})\nexport class LoginEmailPageModule {}\n","export default \".sign-in-content {\\n  --background: linear-gradient(#00A3F3, #00CEFA);\\n}\\n\\n.form-login-email {\\n  padding: 100px 30px 0 30px;\\n}\\n\\n.logo-login-email {\\n  margin-bottom: 50px;\\n}\\n\\n.input-list-login-email {\\n  background: transparent;\\n}\\n\\n.input-login-email {\\n  --border-width: 0 0 3px 0 !important;\\n  margin-bottom: 30px;\\n  --background: transparent;\\n  --border-color: #fff;\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: 400;\\n}\\n\\n.btn-login-email {\\n  --background: #A0ED00;\\n  --border-radius: 50px;\\n  font-size: 20px;\\n  font-weight: 600;\\n}\\n\\n.forgot-password ion-button {\\n  --background: transparent;\\n  font-size: 16px;\\n  font-weight: 400;\\n}\\n\\n.remove-form {\\n  padding-top: 190px;\\n}\\n\\n.bloc-remove-form {\\n  padding: 0 30px;\\n}\\n\\n.bloc-remove-form ion-button {\\n  font-size: 20px;\\n  font-weight: 600;\\n  --border-radius: 50px;\\n  width: 100%;\\n  --background: #8B8B8B;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4tZW1haWwvbG9naW4tZW1haWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0NBQUE7QUFDSjs7QUFDQTtFQUNJLDBCQUFBO0FBRUo7O0FBQUE7RUFDSSxtQkFBQTtBQUdKOztBQURBO0VBQ0ksdUJBQUE7QUFJSjs7QUFGQTtFQUNJLG9DQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUtKOztBQUhBO0VBQ0kscUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQU1KOztBQUpBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFPSjs7QUFMQTtFQUNJLGtCQUFBO0FBUUo7O0FBTkE7RUFDSSxlQUFBO0FBU0o7O0FBUEE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtBQVVKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4tZW1haWwvbG9naW4tZW1haWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZ24taW4tY29udGVudHtcbiAgICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjMDBBM0YzLCAjMDBDRUZBKTtcbn1cbi5mb3JtLWxvZ2luLWVtYWlsIHtcbiAgICBwYWRkaW5nOiAxMDBweCAzMHB4IDAgMzBweDtcbn1cbi5sb2dvLWxvZ2luLWVtYWlsIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuLmlucHV0LWxpc3QtbG9naW4tZW1haWx7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG4uaW5wdXQtbG9naW4tZW1haWx7XG4gICAgLS1ib3JkZXItd2lkdGg6IDAgMCAzcHggMCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAtLWJvcmRlci1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5idG4tbG9naW4tZW1haWx7XG4gICAgLS1iYWNrZ3JvdW5kOiAjQTBFRDAwO1xuICAgIC0tYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbi5mb3Jnb3QtcGFzc3dvcmQgaW9uLWJ1dHRvbiB7XG4gICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5yZW1vdmUtZm9ybSB7XG4gICAgcGFkZGluZy10b3A6IDE5MHB4O1xufVxuLmJsb2MtcmVtb3ZlLWZvcm0ge1xuICAgIHBhZGRpbmc6IDAgMzBweDtcbn1cbi5ibG9jLXJlbW92ZS1mb3JtIGlvbi1idXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIC0tYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAtLWJhY2tncm91bmQ6ICM4QjhCOEI7XG59Il19 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FirebaseAuthService } from 'src/app/services/firebase-auth.service';\n\n@Component({\n  selector: 'app-login-email',\n  templateUrl: './login-email.page.html',\n  styleUrls: ['./login-email.page.scss'],\n})\nexport class LoginEmailPage implements OnInit {\n\n  loginForm: FormGroup;\n  submitError: string;\n  authRedirectResult: Subscription;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' }\n    ]\n  };\n\n  constructor(\n    public angularFire: AngularFireAuth,\n    public router: Router,\n    private ngZone: NgZone,\n    private authService: FirebaseAuthService\n  ) {\n\n    this.loginForm = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ]))\n    });\n\n    this.authRedirectResult = this.authService.getRedirectResult()\n    .subscribe(result => {\n      if (result.user) {\n        this.redirectLoggedUserToHomePage();\n      } else if (result.error) {\n        this.submitError = result.error;\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  signInWithEmail() {\n    this.authService.signInWithEmail(this.loginForm.value['email'], this.loginForm.value['password'])\n    .then(user => {\n      this.redirectLoggedUserToHomePage();\n    })\n    .catch(error => {\n      this.submitError = error.message;\n    });\n  }\n\n  redirectLoggedUserToHomePage() {\n    this.ngZone.run(() => {\n      this.router.navigate(['/dashboard/home']);\n    });\n  }\n\n}\n"]}