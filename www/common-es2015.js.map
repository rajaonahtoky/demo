{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./src/app/models/profile.model.ts","./src/app/services/firebase-auth.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,kCAAkC,MAAM,UAAU;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAA;AAAO,MAAM,YAAY;CAQxB;;;;;;;;;;;;;;;;;;;;;;;;ACR0C;A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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export class ProfileModel {\n  image: string;\n  name: string;\n  role: string;\n  description: string;\n  email: string;\n  provider: string;\n  phoneNumber: string;\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Observable, Subject, from } from 'rxjs';\nimport { Platform } from '@ionic/angular';\nimport { User, auth } from 'firebase/app';\nimport { ProfileModel } from '../models/profile.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthService {\n  currentUser: User;\n  userProviderAdditionalInfo: any;\n  redirectResult: Subject<any> = new Subject<any>();\n\n  constructor(\n    public angularFire: AngularFireAuth,\n    public platform: Platform\n  ) {\n    this.angularFire.onAuthStateChanged((user) => {\n      if (user)\n        this.currentUser = user;\n      else\n        this.currentUser = null;\n    });\n\n    this.angularFire.getRedirectResult()\n    .then((result) => {\n      if (result.user) {\n        this.setProviderAdditionalInfo(result.additionalUserInfo.profile);\n        this.currentUser = result.user;\n        this.redirectResult.next(result);\n      }\n    }, (error) => {\n      this.redirectResult.next({error: error.code});\n    });\n  }\n\n  getLoggedInUser() {\n    return this.currentUser;\n  }\n\n  getRedirectResult(): Observable<any> {\n    return this.redirectResult.asObservable();\n  }\n\n  setProviderAdditionalInfo(additionalInfo: any) {\n    this.userProviderAdditionalInfo = {...additionalInfo};\n  }\n\n  public getProfileData() {\n    const userModel = new ProfileModel();\n    let providerData: any = this.currentUser.providerData[0];\n\n    if (this.userProviderAdditionalInfo) {\n      providerData = {...providerData, ...this.userProviderAdditionalInfo};\n    }\n\n    switch (providerData.providerId) {\n      case 'facebook.com':\n        userModel.image = providerData.photoURL + '?height=400';\n        break;\n      case 'password':\n        userModel.image = 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\n        break;\n      case 'twitter.com':\n        userModel.image = providerData.photoURL.replace('_normal', '_400x400');\n        break;\n      case 'google.com':\n        userModel.image = providerData.photoURL.split('=')[0];\n        break;\n      default:\n        userModel.image = providerData.photoURL;\n    }\n    userModel.name = providerData.name || providerData.displayName || 'What\\'s your name?';\n    userModel.role = 'How would you describe yourself?';\n    userModel.description = providerData.description || 'Anything else you would like to share with the world?';\n    userModel.phoneNumber = providerData.phoneNumber || 'Is there a number where I can reach you?';\n    userModel.email = providerData.email || 'Where can I send you emails?';\n    userModel.provider = (providerData.providerId !== 'password') ? providerData.providerId : 'Credentials';\n\n    return userModel;\n  }\n\n\n  signInWithEmail(email: string, password: string): Promise<auth.UserCredential> {\n    return this.angularFire.signInWithEmailAndPassword(email, password);\n  }\n\n  socialSignIn(providerName: string, scopes?: Array<string>): Promise<any> {\n    const provider = new auth.OAuthProvider(providerName);\n\n    if (scopes) {\n      scopes.forEach(scope => {\n        provider.addScope(scope);\n      });\n    }\n\n    if (this.platform.is('desktop')) {\n      return this.angularFire.signInWithPopup(provider);\n    } else {\n      return this.angularFire.signInWithRedirect(provider);\n    }\n  }\n\n  signInWithFacebook() {\n    const provider = new auth.FacebookAuthProvider();\n    return this.socialSignIn(provider.providerId);\n  }\n\n  signInWithGoogle() {\n    const provider = new auth.GoogleAuthProvider();\n    const scopes = ['profile', 'email'];\n    return this.socialSignIn(provider.providerId, scopes);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}