{"version":3,"sources":["./src/app/pages/login-email/login-email.page.html","./src/app/pages/login-email/login-email-routing.module.ts","./src/app/pages/login-email/login-email.module.ts","./src/app/pages/login-email/login-email.page.scss","./src/app/pages/login-email/login-email.page.ts"],"names":[],"mappings":"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","file":"pages-login-email-login-email-module-es2015.js","sourcesContent":["export default \"<ion-content class=\\\"sign-in-content\\\">\\n  <section class=\\\"form-login-email\\\">\\n    <div class=\\\"logo-login-email ion-text-center\\\">\\n      <img src=\\\"assets/images/logo.png\\\" alt=\\\"\\\">\\n    </div>\\n    <div class=\\\"bloc-form-login-email\\\">\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"signInWithEmail()\\\">\\n        <ion-list class=\\\"inputs-list input-list-login-email\\\" lines=\\\"full\\\">\\n          <ion-item class=\\\"input-item input-login-email\\\">\\n            <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" clearInput autocapitalize=\\\"off\\\" inputmode=\\\"email\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"error-container\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span>{{ validation.message }}</span>\\n              </div>\\n            </ng-container>\\n          </div>\\n          <ion-item class=\\\"input-item input-login-email\\\">\\n            <ion-input type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"error-container\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n              <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\n                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                <span>{{ validation.message }}</span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-list>\\n        <ion-button class=\\\"sign-in-btn btn-login-email\\\" type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!loginForm.valid\\\">Go !</ion-button>\\n        <div class=\\\"error-container\\\" *ngIf=\\\"submitError\\\">\\n          <div class=\\\"error-message\\\">\\n            <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n            <span>{{ submitError }}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"forgot-password ion-text-center\\\">\\n          <ion-button routerLink=\\\"/login/lost-password\\\">\\n            mot de passe oubli√©\\n          </ion-button>\\n        </div>\\n      </form>\\n    </div>\\n  </section>\\n  <section class=\\\"remove-form ion-text-center\\\">\\n    <div class=\\\"bloc-remove-form\\\">\\n      <ion-button>\\n        Annuler\\n      </ion-button>\\n    </div>\\n  </section>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginEmailPage } from './login-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginEmailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginEmailPageRoutingModule } from './login-email-routing.module';\n\nimport { LoginEmailPage } from './login-email.page';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    LoginEmailPageRoutingModule,\n  ],\n  declarations: [LoginEmailPage]\n})\nexport class LoginEmailPageModule {}\n","export default \".sign-in-content {\\n  --background: linear-gradient(#00A3F3, #00CEFA);\\n}\\n\\n.form-login-email {\\n  padding: 100px 30px 0 30px;\\n}\\n\\n.logo-login-email {\\n  margin-bottom: 50px;\\n}\\n\\n.input-list-login-email {\\n  background: transparent;\\n}\\n\\n.input-login-email {\\n  --border-width: 0 0 3px 0 !important;\\n  margin-bottom: 30px;\\n  --background: transparent;\\n  --border-color: #fff;\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: 400;\\n}\\n\\n.btn-login-email {\\n  --background: #A0ED00;\\n  --border-radius: 50px;\\n  font-size: 20px;\\n  font-weight: 600;\\n}\\n\\n.forgot-password ion-button {\\n  --background: transparent;\\n  font-size: 16px;\\n  font-weight: 400;\\n}\\n\\n.remove-form {\\n  padding-top: 190px;\\n}\\n\\n.bloc-remove-form {\\n  padding: 0 30px;\\n}\\n\\n.bloc-remove-form ion-button {\\n  font-size: 20px;\\n  font-weight: 600;\\n  --border-radius: 50px;\\n  width: 100%;\\n  --background: #8B8B8B;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4tZW1haWwvbG9naW4tZW1haWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0NBQUE7QUFDSjs7QUFDQTtFQUNJLDBCQUFBO0FBRUo7O0FBQUE7RUFDSSxtQkFBQTtBQUdKOztBQURBO0VBQ0ksdUJBQUE7QUFJSjs7QUFGQTtFQUNJLG9DQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQUtKOztBQUhBO0VBQ0kscUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQU1KOztBQUpBO0VBQ0kseUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFPSjs7QUFMQTtFQUNJLGtCQUFBO0FBUUo7O0FBTkE7RUFDSSxlQUFBO0FBU0o7O0FBUEE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtBQVVKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4tZW1haWwvbG9naW4tZW1haWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZ24taW4tY29udGVudHtcbiAgICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjMDBBM0YzLCAjMDBDRUZBKTtcbn1cbi5mb3JtLWxvZ2luLWVtYWlsIHtcbiAgICBwYWRkaW5nOiAxMDBweCAzMHB4IDAgMzBweDtcbn1cbi5sb2dvLWxvZ2luLWVtYWlsIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuLmlucHV0LWxpc3QtbG9naW4tZW1haWx7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG4uaW5wdXQtbG9naW4tZW1haWx7XG4gICAgLS1ib3JkZXItd2lkdGg6IDAgMCAzcHggMCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAtLWJvcmRlci1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5idG4tbG9naW4tZW1haWx7XG4gICAgLS1iYWNrZ3JvdW5kOiAjQTBFRDAwO1xuICAgIC0tYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cbi5mb3Jnb3QtcGFzc3dvcmQgaW9uLWJ1dHRvbiB7XG4gICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5yZW1vdmUtZm9ybSB7XG4gICAgcGFkZGluZy10b3A6IDE5MHB4O1xufVxuLmJsb2MtcmVtb3ZlLWZvcm0ge1xuICAgIHBhZGRpbmc6IDAgMzBweDtcbn1cbi5ibG9jLXJlbW92ZS1mb3JtIGlvbi1idXR0b24ge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIC0tYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAtLWJhY2tncm91bmQ6ICM4QjhCOEI7XG59Il19 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FirebaseAuthService } from 'src/app/services/firebase-auth.service';\n\n@Component({\n  selector: 'app-login-email',\n  templateUrl: './login-email.page.html',\n  styleUrls: ['./login-email.page.scss'],\n})\nexport class LoginEmailPage implements OnInit {\n\n  loginForm: FormGroup;\n  submitError: string;\n  authRedirectResult: Subscription;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' }\n    ]\n  };\n\n  constructor(\n    public angularFire: AngularFireAuth,\n    public router: Router,\n    private ngZone: NgZone,\n    private authService: FirebaseAuthService\n  ) {\n\n    this.loginForm = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ]))\n    });\n\n    this.authRedirectResult = this.authService.getRedirectResult()\n    .subscribe(result => {\n      if (result.user) {\n        this.redirectLoggedUserToHomePage();\n      } else if (result.error) {\n        this.submitError = result.error;\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  signInWithEmail() {\n    this.authService.signInWithEmail(this.loginForm.value['email'], this.loginForm.value['password'])\n    .then(user => {\n      this.redirectLoggedUserToHomePage();\n    })\n    .catch(error => {\n      this.submitError = error.message;\n    });\n  }\n\n  redirectLoggedUserToHomePage() {\n    this.ngZone.run(() => {\n      this.router.navigate(['/dashboard/home']);\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}